% erlang option to compile modules with debug info in them
% see http://erlang.org/doc/man/compile.html for details

{erl_opts, [debug_info]}.

% add riak_ensemble_ng package version 2.4.0 as dependency from hex.pm
% the package name is riak_ensemble_ng but the project is called riak_ensemble
% see https://hex.pm/packages/riak_ensemble_ng for details

{deps, [{riak_ensemble, "2.4.0", {pkg, riak_ensemble_ng}}]}.

% add configuration for the relase, rebar3 uses relx to create releases
% see https://github.com/erlware/relx for details

{relx, [
    % our release is for the project named "cadena" version 0.1.0
    {release, {cadena, "0.1.0"},
         [
          % we want to include in the release cadena itself
          cadena,
          % and riak_ensemble, but we don't want to start it automatically
          % when our project starts, so we add the load option so it's
          % loaded even when it's not in the application list in the .app file
          {riak_ensemble, load}]},

        % by default we want to do a dev build, for more details see
        % https://www.rebar3.org/v3/docs/releases

        {dev_mode, true},

        % in this build we don't what to include the erlang runtime system
        % it will use one from the environment it runs on instead
        {include_erts, false},

        % specify a file to go look for variables to use as replacements in
        % template files during release creation
        {overlay_vars, "config/vars.config"}
       ]}.

% we add a project plugin to our project, in this case rebar3_cuttlefish,
% which generates a human readable/editable config file and validation logic
% from a configuration schema
% check https://github.com/tsloughter/rebar3_cuttlefish and
% https://github.com/basho/cuttlefish for more information

{project_plugins, [rebar3_cuttlefish]}.
